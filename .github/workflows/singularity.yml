name: Singularity Build
on:
  push:
    branches:
      - main
    paths:
      - Dockerfile

  pull_request:
    paths:
      - Dockerfile

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  SINGULARITY_VERSION: 3.8.3

jobs:
  build-singularity:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            build-essential \
            libssl-dev \
            uuid-dev \
            libgpgme11-dev \
            squashfs-tools \
            libseccomp-dev \
            pkg-config

      - name: Install Singularity
        env:
          GOPATH: /tmp/go
        run: |
          mkdir -p $GOPATH
          sudo mkdir -p /usr/local/var/singularity/mnt && \
          mkdir -p $GOPATH/src/github.com/sylabs && \
          cd $GOPATH/src/github.com/sylabs && \
          wget -qO- https://github.com/sylabs/singularity/releases/download/v${SINGULARITY_VERSION}/singularity-ce-${SINGULARITY_VERSION}.tar.gz | \
          tar xzv && \
          cd singularity-ce-${SINGULARITY_VERSION} && \
          ./mconfig -p /usr/local && \
          make -C builddir && \
          sudo make -C builddir install

      - uses: actions/checkout@v3

      - name: Build Docker container
        run: docker build -t temp .

      - name: Convert to Singularity
        run: sudo singularity build container.sif docker-daemon://temp:latest

      - name: Login and Deploy Container
        # if: github.event_name != 'pull_request'
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | singularity remote login -u ${{ github.actor }} --password-stdin oras://${{ env.REGISTRY }}
          singularity push container.sif oras://${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ format('{0}-docker', steps.meta.outputs.tags) }}
          labels: ${{ steps.meta.outputs.labels }}